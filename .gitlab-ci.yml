include:
  - template: Auto-DevOps.gitlab-ci.yml




# borrowing python tests from https://gitlab.com/gitlab-data/analytics/-/blob/master/.gitlab-ci.yml

stages:
  - build
  - üêç Python
  - test
  - deploy  # dummy stage to follow the template guidelines
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup

.python_check: &python_check
  stage: üêç Python
  needs: []
  image: python:3
  # rules:
  #   - changes:
  #     - "**/*.py"
  allow_failure: true
  before_script:
    - env POETRY_HOME=/usr/local curl -sSL https://github.com/python-poetry/poetry/raw/master/install-poetry.py | python3 - --preview
    - which poetry
    - poetry --version

python_check_style:
  <<: *python_check
  script:
    - sh -e -u -x .ci/python_check_style.sh furry_barnacle tests

python_check_static_typing:
  <<: *python_check
  script:
    - sh -e -u -x .ci/python_check_static_typing.sh furry_barnacle tests

python_check_linter:
  <<: *python_check
  script:
    - sh -e -u -x .ci/python_check_linter.sh furry_barnacle tests

python_check_complexity:
  <<: *python_check
  script:
    - sh -e -u -x .ci/python_check_complexity.sh furry_barnacle tests

python_check_tests:
  <<: *python_check
  script:
    - sh -e -u -x .ci/python_check_tests.sh furry_barnacle tests
  artifacts:
    reports:
        junit: ${CI_PROJECT_DIR}/report.xml
    paths:
        - ${CI_PROJECT_DIR}/.coverage.${CI_JOB_ID}
    expire_in: 1 day
    when: on_success
